Ext.data.JsonP.man({"tagname":"class","name":"man","autodetected":{},"files":[{"filename":"man.md","href":"man.md.html#man"},{"filename":"man.js","href":"man.html#man"}],"members":[{"name":"","tagname":"property","owner":"man","id":"property-","meta":{}},{"name":"drops","tagname":"property","owner":"man","id":"property-drops","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-man","extends":null,"singleton":null,"private":null,"mixins":[],"requires":["crypto","enum","expectation-maximization","fft-js","gamma","glwip","jsbayes","liegroup","mathjs","mljs","multivariate-normal","newton-raphson","node-svd","node-svm","nodehmm","recurrentjs"],"uses":[],"short_doc":"SourceForge\n    github\n    geointapps\n    gitlab\n\nThe matrix manipulator MAN provides:\nmatlab-like matrix manipulator...","component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Requires</h4><div class='dependency'>crypto</div><div class='dependency'>enum</div><div class='dependency'>expectation-maximization</div><div class='dependency'>fft-js</div><div class='dependency'>gamma</div><div class='dependency'>glwip</div><div class='dependency'>jsbayes</div><div class='dependency'>liegroup</div><div class='dependency'>mathjs</div><div class='dependency'>mljs</div><div class='dependency'>multivariate-normal</div><div class='dependency'>newton-raphson</div><div class='dependency'>node-svd</div><div class='dependency'>node-svm</div><div class='dependency'>nodehmm</div><div class='dependency'>recurrentjs</div><h4>Files</h4><div class='dependency'><a href='source/man.md.html#man' target='_blank'>man.md</a></div><div class='dependency'><a href='source/man.html#man' target='_blank'>man.js</a></div></pre><div class='doc-contents'><p><a href=\"https://sourceforge.net\">SourceForge</a>\n    <a href=\"https://github.com/acmesds/jslab\">github</a>\n    <a href=\"https://git.geointapps.org/acmesds/jslab\">geointapps</a>\n    <a href=\"https://gitlab.west.nga.ic.gov/acmesds/jslab\">gitlab</a></p>\n\n<p>The matrix manipulator MAN provides:\n<a href=\"https://www.npmjs.com/package/mathjs\">matlab-like matrix manipulators</a>,\n<a href=\"https://www.npmjs.com/package/jimp\">light weight image processing</a>,\n<a href=\"https://www.npmjs.com/package/mathjs\">symbolic algebra</a>,\n<a href=\"https://www.npmjs.com/package/dsp\">digital signal</a> and <a href=\"https://www.npmjs.com/package/fft-js\">spectral</a> processing,\nhidden markov (<a href=\"https://www.npmjs.com/package/nodehmm\">viterbi, baum-welch</a> and\n<a href=\"https://www.npmjs.com/package/expectation-maximization\">EM</a> algorithms),\n<a href=\"https://www.npmjs.com/package/node-svd\">eigen spectrums</a>,\n<a href=\"https://www.npmjs.com/package/recurrent-js\">recurrent</a>,\n<a href=\"https://www.npmjs.com/package/jsbayes\">bayesian belief</a> and\n<a href=\"http://caffe.berkeleyvision.org/\">convolutional</a> neural networks,\n<a href=\"https://www.npmjs.com/package/ml-logistic-regression\">logistic</a> and\n<a href=\"https://www.npmjs.com/package/node-svm\">support vector machine</a> regressions,\nvarious (<a href=\"https://www.npmjs.com/package/edmonds-blossom\">least cost path</a>,\n<a href=\"https://www.npmjs.com/package/javascript-lp-solver\">linear programming</a>,\n<a href=\"https://www.npmjs.com/package/newton-raphson-method\">gradient descent, newton-raphton</a>\nand <a href=\"https://www.npmjs.com/package/ml\">other machine learning</a>) non-linear optimizers,\nseveral special functions (<a href=\"https://www.npmjs.com/package/gamma\">gamma</a>,\n<a href=\"https://www.npmjs.com/package/multivariate-normal\">multivariate normal</a>,\n<a href=\"https://www.npmjs.com/package/math-riemann-zeta\">rieman-zeta</a>),\n<a href=\"https://github.com/ACMESDS/totem\">task sharding</a>,\nand a data i/o interface.</p>\n\n<h2>Usage</h2>\n\n<p>Use MAN as follows:</p>\n\n<pre><code>var $ = require(\"man\");\n\nEval script into context ctx with callback(ctx):\n\n    $( \"matlab script\", ctx, (ctx) =&gt; {   \n        ...\n    } );\n\n    $( \"matlab script\", ctx );\n\n    var A = $( \"matlab expression\" );\n\nCreate, process and index a matrix:\n\n    var \n        A = $( N, (n,A) =&gt; A[n] = ... ),  // define vector A of N elements \n        B = $( [M,N], (n,m,B) =&gt; B[m][n] = ... ),   // define M x N matrrix\n        C = A.$( (n,C) =&gt; C[n] = ... ),     // index matrix A with callback\n        D = A.$( C );   // index matrix A with matrix C\n\nImport functions to $.somefn and to $( \"somefn(...)\" )\n\n    $( {\n        somefn: function (args) { ... },\n        :\n        :\n    } );\n\nExecute tasker sharder (an example):\n\n        $( { \n            keys: \"i,j,k\",      // e.g. array indecies\n            i: [0,1,2,3],       // domain of index i\n            j: [4,8],               // domain of index j\n            k: [0],                 // domain of index k\n            qos: 0,             // regulation time in ms if not zero\n            local: false,       // enable to run task local, i.e. w/o workers and nodes\n            workers: 4,         // limit number of workers (aka cores) per node\n            nodes: 3            // limit number of nodes (ala locales) in the cluster\n        }, \n\n        // here, a simple task that returns a message \n        ($) =&gt; \"my result is \" + (i + j*k) + \" from \" + $.worker + \" on \"  + $.node,\n\n        // here, a simple callback that displays the task results\n        (msg) =&gt; console.log(msg) \n    );\n\nGroup events by key to callback cb( events ) with cb( null ) at end:\n\n    [ev, ...].feed( key, (evs) =&gt; { ... } ); \n    \"query\".feed( key, (evs) =&gt; { ... } );  \n\nAggregate and save events ev = {at: \"KEY\", ...} to ctx.Save_KEY with callback cb(unsaved events)\n\n    [ev, ...].save( ctx, (evs) =&gt; { ... } );\n    \"query\".save( ctx, (evs) =&gt; { ... } );\n</code></pre>\n\n<h2>Installation</h2>\n\n<p>Clone <a href=\"https://github.com/acmesds/man\">MAN manipulator</a> into your PROJECT/man folder.<br/>\nClone <a href=\"https://github.com/acmesds/enum\">ENUM enumerators</a> into your PROJECT/enum folder.</p>\n\n<h3>Required MySQL databases</h3>\n\n<p>app._stats Read  to derive the default save keys</p>\n\n<h3>Manage</h3>\n\n<pre><code>npm run [ edit || start ]           # Configure environment\nnpm test [ ? || L1 || ... ]                 # unit test\nnpm run [ prmprep || prmload ]      # Revise PRM\n</code></pre>\n\n<h2>Contributing</h2>\n\n<p>To contribute to this module, see our <a href=\"https://totem.west.ile.nga.ic.gov/issues.view\">issues</a>\nand <a href=\"https://totem.west.ile.nga.ic.gov/milestones.view\">milestones</a>.</p>\n\n<h2>License</h2>\n\n<p><a href=\"LICENSE\">MIT</a></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='man'>man</span><br/><a href='source/man.html#man-property-' target='_blank' class='view-source'>view source</a></div><a href='#!/api/man-property-' class='name expandable'></a> : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Training requires:\n    SAMPLES >= POSITIVES + (MAXSTAGES - 1) * (1 - STAGEHITR) * POSITIVES + NEGATIVES\nthat is:\nPOSI...</div><div class='long'><p>Training requires:\n    SAMPLES >= POSITIVES + (MAXSTAGES - 1) * (1 - STAGEHITR) * POSITIVES + NEGATIVES\nthat is:\nPOSITIVES &lt;= (SAMPLES-NEGATIVES) / (1 + (MAXSTAGES-1)*(1-STAGEHITR))</p>\n\n<p>Actual STAGES (from training log) &lt;= MAXSTAGES\nDesired HITRATE = STAGEHITR ^ MAXSTAGES --> STAGEHITR ^ (Actual STAGES)\nDesired FALSEALARMRATE = STAGEFAR ^ MAXSTAGES --> STAGEFAR ^ (Actual STAGES)</p>\n\n<p>The samples_zfullN100 file will always contain $NEGATIVES number of negative images.</p>\n</div></div></div><div id='property-drops' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='man'>man</span><br/><a href='source/man.html#man-property-drops' target='_blank' class='view-source'>view source</a></div><a href='#!/api/man-property-drops' class='name expandable'>drops</a> : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>create a forcasting jpg fcname by dropping random source jpgs at random\nscales, flips and rotations into a background...</div><div class='long'><p>create a forcasting jpg fcname by dropping random source jpgs at random\nscales, flips and rotations into a background jpg bgname.</p>\n<p>Defaults to: <code>0</code></p></div></div></div></div></div></div></div>","meta":{}});