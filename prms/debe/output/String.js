Ext.data.JsonP.String({"tagname":"class","name":"String","alternateClassNames":[],"members":[{"name":"","tagname":"method","owner":"String","id":"method-","meta":{}}],"aliases":{},"files":[{"filename":"","href":""}],"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><div class='doc-contents'>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='String'>String</span><br/><a href='source/debe.html#String-method-' target='_blank' class='view-source'>view source</a></div><a href='#!/api/String-method-' class='name expandable'></a>( <span class='pre'>req, ds, cache, ctx, rec, viaBrowser, cb</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Expands markdown of the form:\n\n[ post ] ( SKIN.view ? w=WIDTH &amp; h=HEIGHT &amp; x=BASE$X &amp; y=BASE$Y &amp; OPTS...</div><div class='long'><p>Expands markdown of the form:</p>\n\n<pre><code>[ post ] ( SKIN.view ? w=WIDTH &amp; h=HEIGHT &amp; x=BASE$X &amp; y=BASE$Y &amp; OPTS ) || BASE,X,Y &gt;= SKIN,WIDTH,HEIGHT,OPTS  \n[ image ] ( PATH.jpg ? w=WIDTH &amp; h=HEIGHT )  \n[ LINK ]( URL )  ||  [ FONT ]( TEXT )  ||  [ ]( URL )  ||  [TOPIC]( )  \n$$ inline TeX $$  ||  n$$ break TeX $$ || a$$ AsciiMath $$ || m$$ MathML $$ || [#EXPR || TeX] OP= [#EXPR || TeX]  \n\\${ KEY } || \\${ EXPR } || \\${doc( EXPR , \"IDX, ...\" )}  \nKEY &lt;= VALUE || OP &lt;= EXPR(lhs),EXPR(rhs)  \n</code></pre>\n\n<p>using the supplifed cache to get/put KEY values, as well as block-escaping:</p>\n\n<pre><code>HEADER:\n        BLOCK\nand markdown scripting:\n    MARKDOWN\nscript:\nMATLAB EMULATION SCRIPT\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>req</span> : Object<div class='sub-desc'><p>Totem request</p>\n</div></li><li><span class='pre'>ds</span> : <a href=\"#!/api/String\" rel=\"String\" class=\"docClass\">String</a><div class='sub-desc'><p>dataset name for</p>\n</div></li><li><span class='pre'>cache</span> : Object<div class='sub-desc'><p>hash for cacheing markdown variables</p>\n</div></li><li><span class='pre'>ctx</span> : Object<div class='sub-desc'><p>hash holding markdown variables</p>\n</div></li><li><span class='pre'>rec</span> : Obect<div class='sub-desc'><p>record hash for markdown variables</p>\n</div></li><li><span class='pre'>viaBrowser</span> : Boolean<div class='sub-desc'><p>true to render markdown to browser</p>\n</div></li><li><span class='pre'>cb</span> : Function<div class='sub-desc'><p>callback(markdown html)</p>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});